[<img src="https://raw.github.com/thumbor/thumbor/master/logo-thumbor.png">](https://github.com/thumbor/thumbor)

thumbor is a smart imaging service. It enables on-demand [crop, resizing and flipping](http://thumbor.readthedocs.io/en/latest/crop_and_resize_algorithms.html) of images.

For more information check [thumbor's documentation](http://thumbor.readthedocs.org/en/latest/index.html "thumbor docs").

### Demo

You can see thumbor in action at http://thumborize.me/

---

# DffrntLab

## Where it is

https://pypi.org/project/dffrntlab-thumbor/

## Push to PyPi

Update version at `setup.py`.

```sh
python setup.py sdist bdist_wheel
# install twine if you don't have
# pip install twine
twine upload dist/*
```

**TODO:** Now we use this profile to push packages: https://pypi.org/user/maximka777/. We have to register one for DffrntLab.

## How to run locally

At first we need to install all dependencies via `make setup`.

Default configuration file is `./thumbor/thumbor.conf`. It's specified in `Makefile` at `run` command: `@thumbor -l debug -d --conf=$(CONFIG)`. You can specify another configuration file:

```sh
make run -e CONFIG=./path/to/your/thumbor.conf
```

Run:
```sh
make run
# or
make
```

After you did some chagnes, you have to install thumbor again:

```
pip install .
```

### Primary color detection

In configuration file you can use `'thumbor.detectors.primary_color_detector'` in `DETECTORS` section.

This detector calculates image primary color.

To get calculated image primary color knock to **meta** endpoint:

```
GET http://host-with-your-thumbor.com/unsafe/meta/path/to/image.jpg
```

### Filter external requests out

To filter external requests out, Thumbor checks `Host` header. If it ends with top level domain then it is blocked.

List of TLDs you can specify in `TOP_LEVEL_DOMAINS` configuration field (by default it is `['com']`).

This check is applied only for `POST /image` endpoint.
